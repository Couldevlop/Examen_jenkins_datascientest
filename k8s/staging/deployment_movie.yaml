apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  labels:
    io.kompose.service: movie-service
  name: movie-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: movie-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
        kompose.version: 1.21.0 (992df58d8)
      labels:
        io.kompose.service: movie-service
    spec:
      containers:
      - args:
        - uvicorn
        - app.main:app
        - --reload
        - --host
        - 0.0.0.0
        - --port
        - "8000"
        env:
        - name: CAST_SERVICE_HOST_URL
          value: http://cast_service:8000/api/v1/casts/
        - name: DATABASE_URI
          value: postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev
        image: movie-service:latest  # Spécifie ici l'image avec son tag
        imagePullPolicy: IfNotPresent  # Change à Always si nécessaire
        name: movie-service
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /app/
          name: movie-service-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: movie-service-claim0
        persistentVolumeClaim:
          claimName: movie-service-claim0
      imagePullSecrets:  # Ajout du secret pour extraire l'image depuis un registre privé
      - name: regcred    # Ce doit être le nom du secret que tu as créé pour accéder au registre Docker
status: {}
